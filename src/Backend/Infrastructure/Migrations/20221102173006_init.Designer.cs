// <auto-generated />
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221102173006_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.BankAccount", b =>
                {
                    b.Property<int>("BankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankAccountId"), 1L, 1);

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BankAccountId");

                    b.HasIndex("UserId");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            BankAccountId = 1,
                            Balance = 7650,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Banknot", b =>
                {
                    b.Property<int>("BanknotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BanknotId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BanknotValue")
                        .HasColumnType("int");

                    b.Property<int>("BankomatId")
                        .HasColumnType("int");

                    b.HasKey("BanknotId");

                    b.HasIndex("BankomatId");

                    b.ToTable("Banknots");

                    b.HasData(
                        new
                        {
                            BanknotId = 1,
                            Amount = 5,
                            BanknotValue = 200,
                            BankomatId = 1
                        },
                        new
                        {
                            BanknotId = 2,
                            Amount = 5,
                            BanknotValue = 100,
                            BankomatId = 1
                        },
                        new
                        {
                            BanknotId = 3,
                            Amount = 5,
                            BanknotValue = 50,
                            BankomatId = 1
                        },
                        new
                        {
                            BanknotId = 4,
                            Amount = 5,
                            BanknotValue = 20,
                            BankomatId = 1
                        },
                        new
                        {
                            BanknotId = 5,
                            Amount = 5,
                            BanknotValue = 10,
                            BankomatId = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Bankomat", b =>
                {
                    b.Property<int>("BankomatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankomatId"), 1L, 1);

                    b.HasKey("BankomatId");

                    b.ToTable("Bankomats");

                    b.HasData(
                        new
                        {
                            BankomatId = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "Jan",
                            LastName = "Kowalski"
                        });
                });

            modelBuilder.Entity("Domain.Entities.BankAccount", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("BankAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Banknot", b =>
                {
                    b.HasOne("Domain.Entities.Bankomat", "Bankomat")
                        .WithMany("Banknots")
                        .HasForeignKey("BankomatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bankomat");
                });

            modelBuilder.Entity("Domain.Entities.Bankomat", b =>
                {
                    b.Navigation("Banknots");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("BankAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
